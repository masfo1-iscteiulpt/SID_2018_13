-- MySQL Script generated by MySQL Workbench
-- Sun Feb 24 23:13:58 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema siddb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `siddb` ;

-- -----------------------------------------------------
-- Schema siddb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `siddb` ;
USE `siddb` ;

-- -----------------------------------------------------
-- Table `siddb`.`Investigador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Investigador` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Investigador` (
  `email` VARCHAR(100) NOT NULL,
  `nome` VARCHAR(100) NULL,
  `categoria` VARCHAR(45) NULL,
  PRIMARY KEY (`email`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Cultura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Cultura` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Cultura` (
  `idCultura` INT NOT NULL AUTO_INCREMENT,
  `Investigador_Responsavel` VARCHAR(100) NOT NULL,
  `nome` VARCHAR(45) NULL,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`idCultura`, `Investigador_Responsavel`),
  INDEX `fk_Cultura_Investigador1_idx` (`Investigador_Responsavel` ASC) VISIBLE,
  CONSTRAINT `fk_Cultura_Investigador1`
    FOREIGN KEY (`Investigador_Responsavel`)
    REFERENCES `siddb`.`Investigador` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Variavel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Variavel` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Variavel` (
  `idVariavel` INT NOT NULL AUTO_INCREMENT,
  `nomevar` VARCHAR(45) NULL,
  PRIMARY KEY (`idVariavel`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Sensor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Sensor` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Sensor` (
  `Tipo` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`Tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Medicao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Medicao` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Medicao` (
  `idMedicao` INT NOT NULL AUTO_INCREMENT,
  `Sensor_Tipo` VARCHAR(10) NOT NULL,
  `datahora` TIMESTAMP NULL,
  `valor` DECIMAL NULL,
  PRIMARY KEY (`idMedicao`, `Sensor_Tipo`),
  INDEX `fk_Medicao_Sensor1_idx` (`Sensor_Tipo` ASC) VISIBLE,
  CONSTRAINT `fk_Medicao_Sensor1`
    FOREIGN KEY (`Sensor_Tipo`)
    REFERENCES `siddb`.`Sensor` (`Tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Variavel_Medida`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Variavel_Medida` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Variavel_Medida` (
  `Variavel_idVariavel` INT NOT NULL,
  `Cultura_idCultura` INT NOT NULL,
  `limiteinferior` DECIMAL NULL,
  `limitesuperior` DECIMAL NULL,
  PRIMARY KEY (`Variavel_idVariavel`, `Cultura_idCultura`),
  INDEX `fk_Variavel_has_Cultura_Cultura1_idx` (`Cultura_idCultura` ASC) VISIBLE,
  INDEX `fk_Variavel_has_Cultura_Variavel_idx` (`Variavel_idVariavel` ASC) VISIBLE,
  CONSTRAINT `fk_Variavel_has_Cultura_Variavel`
    FOREIGN KEY (`Variavel_idVariavel`)
    REFERENCES `siddb`.`Variavel` (`idVariavel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Variavel_has_Cultura_Cultura1`
    FOREIGN KEY (`Cultura_idCultura`)
    REFERENCES `siddb`.`Cultura` (`idCultura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Medicao_Manual`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Medicao_Manual` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Medicao_Manual` (
  `idVariavel` INT NOT NULL,
  `idCultura` INT NOT NULL,
  `Medicao_idMedicao` INT NOT NULL,
  PRIMARY KEY (`idVariavel`, `idCultura`, `Medicao_idMedicao`),
  INDEX `fk_Medicao_Manual_Variavel_has_Cultura1_idx` (`idVariavel` ASC, `idCultura` ASC) VISIBLE,
  INDEX `fk_Medicao_Manual_Medicao1_idx` (`Medicao_idMedicao` ASC) VISIBLE)
ENGINE = MEMORY;


-- -----------------------------------------------------
-- Table `siddb`.`Medicao_Automatica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Medicao_Automatica` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Medicao_Automatica` (
  `Medicao_idMedicao` INT NOT NULL,
  PRIMARY KEY (`Medicao_idMedicao`),
  INDEX `fk_Medicao_Automatica_Medicao1_idx` (`Medicao_idMedicao` ASC) VISIBLE,
  CONSTRAINT `fk_Medicao_Automatica_Medicao1`
    FOREIGN KEY (`Medicao_idMedicao`)
    REFERENCES `siddb`.`Medicao` (`idMedicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Log_Utilizador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Log_Utilizador` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Log_Utilizador` (
  `idLog_Utilizador` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idLog_Utilizador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Log_Medicoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Log_Medicoes` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Log_Medicoes` (
  `idLog_Medicoes` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idLog_Medicoes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Log_Consultas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Log_Consultas` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Log_Consultas` (
  `idLog_Consultas` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idLog_Consultas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Sistema`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Sistema` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Sistema` (
  `limiteInferiorT` DECIMAL NOT NULL,
  `limiteSuperiorT` DECIMAL NULL,
  `limiteInferiorL` DECIMAL NULL,
  `limiteSuperiorL` DECIMAL NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `siddb`.`Log_Cultura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `siddb`.`Log_Cultura` ;

CREATE TABLE IF NOT EXISTS `siddb`.`Log_Cultura` (
  `precedencia` INT NOT NULL,
  `datahora` TIMESTAMP NOT NULL,
  `operacao` VARCHAR(45) NULL,
  `idCultura` INT NOT NULL,
  `investigador` VARCHAR(45) NULL,
  `nome` VARCHAR(45) NULL,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`precedencia`, `datahora`, `idCultura`))
ENGINE = InnoDB;

USE `siddb`;

DELIMITER $$

USE `siddb`$$
DROP TRIGGER IF EXISTS `siddb`.`Cultura_AFTER_INSERT` $$
USE `siddb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `siddb`.`Cultura_AFTER_INSERT` AFTER INSERT ON `Cultura` FOR EACH ROW
BEGIN
	insert into Log_Cultura (precedencia,datahora,operacao,idCultura,investigador,nome,descricao)
		values(1,now(),'insert',NEW.idCultura,NEW.Investigador_responsavel,NEW.nome,New.descricao);
END;$$


USE `siddb`$$
DROP TRIGGER IF EXISTS `siddb`.`Cultura_BEFORE_UPDATE` $$
USE `siddb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `siddb`.`Cultura_BEFORE_UPDATE` BEFORE UPDATE ON `Cultura` FOR EACH ROW
BEGIN
insert into Log_Cultura (precedencia,datahora,operacao,idCultura,investigador,nome,descricao)
		values(1,now(),'update',Old.idCultura,OLD.Investigador_responsavel,OLD.nome,OLD.descricao);
END$$


USE `siddb`$$
DROP TRIGGER IF EXISTS `siddb`.`Cultura_AFTER_UPDATE` $$
USE `siddb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `siddb`.`Cultura_AFTER_UPDATE` AFTER UPDATE ON `Cultura` FOR EACH ROW
BEGIN
insert into Log_Cultura (precedencia,datahora,operacao,idCultura,investigador,nome,descricao)
		values(2,now(),'update',NEW.idCultura,NEW.Investigador_responsavel,NEW.nome,New.descricao);
END$$


USE `siddb`$$
DROP TRIGGER IF EXISTS `siddb`.`Cultura_BEFORE_DELETE` $$
USE `siddb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `siddb`.`Cultura_BEFORE_DELETE` BEFORE DELETE ON `Cultura` FOR EACH ROW
BEGIN
	insert into Log_Cultura (precedencia,datahora,operacao,idCultura,investigador,nome,descricao)
		values(1,now(),'delete',Old.idCultura,OLD.Investigador_responsavel,OLD.nome,OLD.descricao);
END$$


DELIMITER ;
SET SQL_MODE = '';
DROP USER IF EXISTS Administrador;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'Administrador' IDENTIFIED BY 'admin';

GRANT ALL ON `siddb`.* TO 'Administrador';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
